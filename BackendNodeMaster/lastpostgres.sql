
create database  blockcertficates;
 #use  blockcertficates;

 psql -U postgres blockcertficates

 CREATE TABLE public.wallet_pk
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    accountid integer,
    publickey character varying COLLATE pg_catalog."default",
    privatekey character varying COLLATE pg_catalog."default",
    blockchain character varying COLLATE pg_catalog."default",
    created_at timestamp without time zone DEFAULT now()
);

CREATE TABLE public.certtemplate_logo
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    logoimages text COLLATE pg_catalog."default",
    accountid integer NOT NULL
);
CREATE TABLE public.usermaster
(
    user_id integer NOT NULL DEFAULT nextval('usermaster_user_id_seq'::regclass),
    fname character varying(100) COLLATE pg_catalog."default" NOT NULL,
    lname character varying(100) COLLATE pg_catalog."default" NOT NULL,
    email character varying(100) COLLATE pg_catalog."default" NOT NULL,
    password character varying(500) COLLATE pg_catalog."default" NOT NULL,
    graduates_members character varying(100) COLLATE pg_catalog."default" NOT NULL,
    how_did_you_find_us character varying(500) COLLATE pg_catalog."default" NOT NULL,
    job_title character varying(100) COLLATE pg_catalog."default" NOT NULL,
    organization_name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    organization_url character varying(500) COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp with time zone DEFAULT now(),
    is_active boolean DEFAULT true,
    is_agree boolean DEFAULT true,
    isverified boolean DEFAULT false,
    blockchain character varying(50) COLLATE pg_catalog."default",
    ispasswordchanged boolean DEFAULT false,    
    CONSTRAINT usermaster_pkey PRIMARY KEY (user_id),
    CONSTRAINT usermaster_email_key UNIQUE (email)

)


  CREATE TABLE PLANMASTER(
     PLANE_ID serial PRIMARY KEY,
     PLAN_NAME VARCHAR (100)  NOT NULL,
     PRICE numeric CHECK (price > 0),
     TEXT VARCHAR (500),
     DESCRIPTION VARCHAR (500)  NOT NULL,
     CREATED_AT TIMESTAMPTZ DEFAULT Now(),
     IS_ACTIVE BOOLEAN DEFAULT true,
     IS_AGREE BOOLEAN DEFAULT true
  );

  CREATE TABLE PLANDETAILS(
    PLANE_ID  integer NOT NULL,
    PLANDETAILS_ID serial PRIMARY KEY,  
    NAME VARCHAR (100)  NOT NULL,
    COUNT integer ,
    INTOVIEW BOOLEAN,
    TICKVIEW  BOOLEAN,  
    CREATED_AT TIMESTAMPTZ DEFAULT Now(),
     IS_ACTIVE BOOLEAN DEFAULT true,
     IS_AGREE BOOLEAN DEFAULT true,
  CONSTRAINT PLANDETAILS_PLANE_ID_fkey FOREIGN KEY (PLANE_ID)
   REFERENCES PLANMASTER (PLANE_ID) MATCH SIMPLE
     ON UPDATE NO ACTION ON DELETE NO ACTION
  );

  CREATE TABLE payment_transaction(   
    PT_ID serial PRIMARY KEY, 
    PLANE_ID  integer NOT NULL,
    USER_ID integer NOT NULL, 
    charge_id VARCHAR (500)  NOT NULL,
    balance_transaction_id VARCHAR (500)  NOT NULL,
    receipt_url VARCHAR (500) NOT NULL,
    status VARCHAR (50) NOT NULL,
    payment_method VARCHAR (500)  NOT NULL,
   amount numeric CHECK (amount > 0), 
   CREATED_AT TIMESTAMPTZ DEFAULT Now(),
   IS_ACTIVE BOOLEAN DEFAULT true
    
  );


  INSERT INTO PLANMASTER (PLAN_NAME,PRICE,DESCRIPTION)
                    VALUES('Developer',7,'Get started with powerful API and site monitoring'),
                    ('Starter',29,'Everything.Enough to power any young company'),
                     ('Growth',75,'Everything+growing room for new appss and projects');


  INSERT INTO PLANDETAILS (PLANE_ID,NAME,COUNT,INTOVIEW,TICKVIEW)
  VALUES(1,'API checks',5,false,false),
  (2,'API checks',15,false,false),
  (3,'API checks',40,false,false),

  (1,'Browser checks',1,false,false),
  (2,'Browser checks',15,false,false),
  (3,'Browser checks',15,false,false),

  (1,'Team members',0,false,true),
  (2,'Team members',5,false,false),
  (3,'Team members',10,false,false),

  (1,'SSL Monitoring',0,true,false),
  (2,'SSL Monitoring',0,true,false),
  (3,'SSL Monitorings',0,true,false);

  INSERT INTO PLANMASTER (PLAN_NAME,PRICE,DESCRIPTION)
                    VALUES('Plan 1',100,'Get started with powerful API and site monitoring'),
                    ('Plan 2',200,'Everything.Enough to power any young company'),
                     ('Plan 3',300,'Everything+growing room for new appss and projects'),
             ('Plan 4',400,'Everything.Enough to power any young company');



  INSERT INTO PLANDETAILS (PLANE_ID,NAME,COUNT,INTOVIEW,TICKVIEW)
  VALUES(1,'Block Certficates',100,false,false),
  (2,'Block Certficates',400,false,false),
  (3,'Block Certficates',500,false,false),
  (4,'Block Certficates',500,false,false);




  CREATE TABLE blockcertficates(
     BC_ID serial PRIMARY KEY,
     count INT DEFAULT 0,
      USER_ID INT NOT NULL,
     CREATED_AT TIMESTAMPTZ DEFAULT Now(),
     IS_ACTIVE BOOLEAN DEFAULT true,
     IS_AGREE BOOLEAN DEFAULT true
  );

  CREATE TABLE public.certtemplate
  (
      id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
      certjson text COLLATE pg_catalog."default",
      certfields text COLLATE pg_catalog."default",
      logoimages text COLLATE pg_catalog."default",
      signatureimages text COLLATE pg_catalog."default",
      CONSTRAINT certtemplate_pkey PRIMARY KEY (id)
  );

  CREATE TABLE public.cohort
  (
      accountid character varying(100) COLLATE pg_catalog."default",
      name character varying(100) COLLATE pg_catalog."default",
      description character varying(500) COLLATE pg_catalog."default",
      timeadded time with time zone DEFAULT now(),
      graduatingdate character varying(50) COLLATE pg_catalog."default",
      graduatingmonth character varying(5) COLLATE pg_catalog."default",
      graduatingyear character varying(5) COLLATE pg_catalog."default",
      graduatingseason character varying(100) COLLATE pg_catalog."default",
      competencyname character varying(100) COLLATE pg_catalog."default",
      competencylevel character varying(100) COLLATE pg_catalog."default",
      blockcertstemplatejson text COLLATE pg_catalog."default",
      competencyexpirationdate time with time zone,
      certtemplateid integer,
      cohortid character varying(100) COLLATE pg_catalog."default",
      id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
      CONSTRAINT cohort_pkey PRIMARY KEY (id)
  );

  CREATE TABLE public.cohortmembers
  (
      timeadded time with time zone DEFAULT now(),
      id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
      studentid integer,
      publickey character varying(100) COLLATE pg_catalog."default",
      onetimeblockcertscode character varying(20) COLLATE pg_catalog."default",
      blockcertsinvitationsent boolean DEFAULT false,
      unsignedcertificationjson text COLLATE pg_catalog."default",
      unsignedcertificateurl character varying COLLATE pg_catalog."default",
      signedcertificatejson text COLLATE pg_catalog."default",
      signedcertificateurl character varying COLLATE pg_catalog."default",
      certificaterevoked boolean DEFAULT false,
      certificatesent boolean DEFAULT false,      
      cohortid integer,
      CONSTRAINT cohortmembers_pkey PRIMARY KEY (id)
  );

  CREATE TABLE public.student
  (
      id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
      firstname character varying(20) COLLATE pg_catalog."default",
      middlename character varying(20) COLLATE pg_catalog."default",
      lastname character varying(20) COLLATE pg_catalog."default",
      emailaddress character varying(100) COLLATE pg_catalog."default",
      phonenumber character varying(50) COLLATE pg_catalog."default",     
      studentid character varying(100) COLLATE pg_catalog."default",
      CONSTRAINT student_pkey PRIMARY KEY (id)
  );

  CREATE TABLE public.potentialcustomer
  (
      id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
      firstname character varying(50) COLLATE pg_catalog."default",
      lastname character varying(50) COLLATE pg_catalog."default",
      emailaddress character varying(70) COLLATE pg_catalog."default",
      onetimecode character varying(10) COLLATE pg_catalog."default",
      publickey character varying(100) COLLATE pg_catalog."default",
      unsignedcertificatejson text COLLATE pg_catalog."default",
      unsignedcertificateurl character varying(200) COLLATE pg_catalog."default",
      signedcertificatejson text COLLATE pg_catalog."default",
      signedcertificateurl character varying(200) COLLATE pg_catalog."default",
      invitationsent boolean DEFAULT false,
      certsent boolean DEFAULT false,
      phonenumber character varying(50) COLLATE pg_catalog."default",
      organizationname character varying(300) COLLATE pg_catalog."default",
      role character varying(200) COLLATE pg_catalog."default",
      describe character varying(500) COLLATE pg_catalog."default",
      findus character varying(200) COLLATE pg_catalog."default",
      questions character varying(1000) COLLATE pg_catalog."default",
      CONSTRAINT potentialcustomer_pkey PRIMARY KEY (id)
  );
  CREATE TABLE public.process_status
  (
      id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
      accountid character varying(100) COLLATE pg_catalog."default",
      cohortid integer,
      studentid integer,
      processtype character varying(100) COLLATE pg_catalog."default",
      status character varying(100) COLLATE pg_catalog."default",
      timeadded time with time zone DEFAULT now(),
      CONSTRAINT process_status_pkey PRIMARY KEY (id)
  );